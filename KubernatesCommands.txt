References
------------------------------------------------------------------------------------------------------------------------------------

https://github.com/kodekloudhub/example-voting-app-kubernetes

https://kubernetes.io/docs/tasks/tools/install-minikube/
#https://www.virtualbox.org/wiki/Downloads   (looks like not mandatory. minikube works fine)
MiniKube Download page for  Windows: https://github.com/kubernetes/minikube/releases


#Install and set up the kubectl tool: -
https://kubernetes.io/docs/tasks/tools/


#Install Minikube: -  [IMP]
https://minikube.sigs.k8s.io/docs/start/


#Minikube Tutorial: -
https://kubernetes.io/docs/tutorials/hello-minikube/

If the minikube installation has been done on the linux, then to access the URL on the local browser, we need to do a few steps to get the service URL to work. 
Those steps are covered on this documentation page: -

https://minikube.sigs.k8s.io/docs/handbook/accessing/#using-minikube-service-with-tunnel





#Install VirtualBox: -
https://www.virtualbox.org/wiki/Downloads
https://www.virtualbox.org/wiki/Linux_Downloads




------------------------------------------------------------------------------------------------------------------------------------





# kubernates installation.
minikube  # below apps are alternatives of minikube.
#kubeadam
#Microk8s




-------------------------------------------------------- minikube commands ----------------------------------------------------------------------------

#start minikube
#minikube start 
#minikube start --cpus 6 --memory 20g --disk-size=50g
minikube start --vm-driver=virtualbox  #other optoins := virtualbox, ssh , docker driver



#Pause Kubernetes without impacting deployed applications:
minikube pause

#Unpause a paused instance:
minikube unpause

#Halt the cluster:
minikube stop

#Change the default memory limit (requires a restart):
minikube config set memory 9001

#Browse the catalog of easily installed Kubernetes services:
minikube addons list

#Create a second cluster running an older Kubernetes release:
minikube start -p aged --kubernetes-version=v1.16.1

#Delete all of the minikube clusters:
minikube delete --all







kubectl run nginx --image=nginx
kubectl apply -f pod-def.yaml
kubectll create -f pod-def.yaml
kubectl describe pod myapp-pod
kubectl delete pod webapp
kubectl run redis --image=redis123 --dry-run -o yaml


kubectl get rs
kubectl delete rs replicaset-1
kubectl replace -f replicaset-definitina.yml
kubectl scale -replicas=6 -f replicaset-definition.yaml
kubectl edit rs new-replica-set   # opens deployment yaml
kubectl describe replicaset myapp-replicaset

kubectl scale replicaset mysaqpp-rs --replicas=2
kubectl edit replicaset myapp-repplica-set


Deployments
===============

--> deployments create replicasets. 

kubectl create deployment --help


kubectl get replicaset
kubectl get pods

kubectl get all

kubectl create deployment httpd-frontend --image=httpd:2.4-alpine --replicas=3




# use create for first time deployments, although create and apply are same.
kubectll create -f deployment-def.yaml

#to get deploy ments
kubectl get deployments    

#to get deployment details
kubectl describe deployment frontend      # or kubectl describe deployment/frontend

# edit deployment 
# just saving deployment file will deploy new changes.
kubectl edit deployment frontend			# kubectl edit deployment/frontend   

# to update deployemnt
kubectl apply -f deployment-def.yaml
or
kubectl set image deployment/myapp-definition.yaml container-name=image-name:version
kubectl set image deployment/myapp-definition.yaml nginx=nginx:1.9.1

# status
kubectl rollout status deployment/myapp-deployment
kubectl rollout history deployment/myapp-deployment

#rollback
kubectl rollout undo deployment/myapp-deployment


# edit deployment

kubectl edit deployment myapp-deployment --record=true





Service
===============

kubectl create -f service-definition.yaml
kubectl apply -f service-def.yaml
kubectl get service servicename-service -n namespace
kubectl get services -n namespace

minikube service myapp-service --url



>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>.MINIKUBE commands <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<,

>minikube start 

Basic Commands:
  start            Starts a local Kubernetes cluster
  status           Gets the status of a local Kubernetes cluster
  stop             Stops a running local Kubernetes cluster
  delete           Deletes a local Kubernetes cluster
  dashboard        Access the Kubernetes dashboard running within the minikube cluster
  pause            pause Kubernetes
  unpause          unpause Kubernetes



minikube start 
kubectl get namespaces
kubectl create namespace devns
kubectl describe namespace devns

kubectl get pods --all-namespaces -o wide
kubectl get nodes -o wide
minikube stop

minikube dashboard





==============================================Kubernates Monitoring Commands =============================================


kubectl top pod: Displays the memory usage of a pod. 
kubectl top pod --containers: Displays the CPU and memory usage for each container in a pod. 
kubectl get resourcequota mem-cpu-demo: Shows the quota and how much of it has been used. 
kubectl exec -it podname -- sh: Enters an interactive session to print the current memory usage. 
cat /sys/fs/cgroup/memory/memory.usage_in_bytes: Prints the current memory usage. 



---------------------------- Creating pod for SpringBootDemo application ---------------------------------------------------------------------------------------------------
# in a new terminal 
minikube start

cd /home/suraj/workload/eclipse-workspaces/STStestworkspace/Spring-Boot-Demo/

docker build -t springbootdemo:latest .

#load your image to minikube.
minikube image load springbootdemo:latest
minikube image ls

docker run -itd  --network host springbootdemo

# alternative to above.
#docker run -itd -p 8080:8080 springbootdemo

docker logs 0dcc5b04f772

https://kubernetes.io/docs/concepts/workloads/pods/


Pods 
------

---> A Pod is similar to a set of containers with shared namespaces and shared filesystem volumes.
---> Restarting a container in a Pod should not be confused with restarting a Pod. A Pod is not a process, but an environment for running container(s). A Pod persists until it is deleted.


kubectl apply -f pod.yaml -n devns

#on minikube dashboard, first time you will get error while pulling image.

# if some issue comes while creating pod, delete pod changed whatever required in pod.yaml and then re-create pod by kubectl apply ...

kubectl get pods -n devns -o wide
kubectl delete pod sbdjar -n devns





