D:\git-repos>git --version
git version 2.16.2.windows.1

#for first time / one time operation.
D:\git-repos>git config --global user.name "suraj patil"

>git config --global user.email "3surajpatil@gmail.com"

>git config --list  (shows configurations locally.)

--> to start tracking your git directory(your code) locally initiate this command and it will create a .git folder
--> if you have created this repository from github.com gui. you can clone it directly.

> git clone url_of_your_repo.(copy url from repo gui.)  . (your destination where you want to copy the repository.)

================== creating a new project folder ===================================================
--> we are starting work  with local master repository. 
--> if you want to start a new project then create a new folder and just initiate this command.
> git init 


> .gitignore  --> create this file with your favourate text editor . this file lists files which we want git to ignore from staging and commits..

.gitignore (file)
------------

*.project
*.class
/dir_name

> create 1 index.html and other files if required.
> git add -A   (will add new files to stages)
> git status    (will show things that are there in stages.)
> git commit -m "first commit"

> git log  ---> this will give you the commit id's 
> $ git remote -v    (this will be blank if there is no remote repository added yet.)


---> now we are ready to create a remote repository via gui/ browser and copy the remote add url. 

> git remote add origin https://github.com/3surajpatil/practice.git
> $ git remote -v
origin  https://github.com/3surajpatil/practice.git (fetch)
origin  https://github.com/3surajpatil/practice.git (push)


--> now we have remote repository so push your content to remote repository.
(this will push content from local master branch to remote master branch. try refreshing on your gui and look if files are pushed successfully..!)
>  git push -u origin master  


---> now we will create branch of the master repository locally with name updates.


>git branch -a    (this will list out branches locally avilable.)
* master
  remotes/origin/master
 
> git branch updates  (this will create a branch with name updates locally. if you see on gui there will be only 1 branch i.e. master as of now..)
  
> git checkout updates  (to switch to updates branch.)
  
---> once new branch is created and switched,  add changes to index.html file.

> git diff  (this will show differences to files maded in current local branch..)

---> this means you are updating contents in updates branch. whereas the content in the master branch remains same.    
 
> git pull  (before commiting just try to get the changes made by others in that repository.) you will get no origin type error. no worries.
 
---> now add changed files to stage mode.
> git status
> git add -A  
> git status
> git commit -m "adding <marquee> in middle content"   //just adding some content
   
  
---> git push -u origin updates  (this will create an updates branch remotely and add the local 'updates' reporitory content to remote 'updates' repository )
--->now lets go back to master branch and merge the two repositories (master and updates).  
  
--> git checkout master   (switching to master )
  
>git branch --merged    (this will show all the branches that are merged with current branch)
* master
 
> git merge updates  (merging updates branch with master branch. make sure you commit all changes in updates branch before merging.)
  
  
----> wait a moment , till now you just have merged content from local updates to local master branches.
----> its time to commit local master repository changes to remote master repo and delete the updates local branch.
----> before committing to master branch , pulling content from master branch.
 
> git pull origin master  

> git push origin master    ( simmilerly if you want to push updates branch :- git push origin updates)

---> now delete remote updated repository.

> git push origin --delete updates

==========================done...

> git clone  (to clone existing repository.)

